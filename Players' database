using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace first_project
{
    class Program
    {
        static void Main(string[] args)
        {
            PlayerBase playerBase = new PlayerBase();
            bool isWorking = true;
            while (isWorking)
            {
                Console.WriteLine("Выберите пункт из меню:");
                Console.WriteLine("1) Добавить нового игрока");
                Console.WriteLine("2) Забанить игрока");
                Console.WriteLine("3) Разбанить игрка");
                Console.WriteLine("4) Удалить игрока из базы");
                Console.WriteLine("5) Вывести всю информации из базы");
                string choice = Console.ReadLine();

                switch (choice)
                {
                    case "1":
                        playerBase.AddPlayer();
                        break;
                    case "2":
                        playerBase.BanPlayer();
                        break;
                    case "3":
                        playerBase.UnbanPlayer();
                        break;
                    case "4":
                        playerBase.DeletePlayer();
                        break;
                    case "5":
                        playerBase.ShowInfo();
                        break;
                    default:
                        Console.WriteLine("Выберите пункт из меню");
                        break;
                }

                Console.ReadKey();
                Console.Clear();
            }
        }
    }
    class PlayerBase
    {
        private List<Player> _players = new List<Player>();

        public void DeletePlayer()
        {
            Console.WriteLine("Введите ID игрока, которого вы хотите удалить");
            int indexOfPlayer = FindPlayerByID();

            if (indexOfPlayer >= 0)
            {
                _players[indexOfPlayer].RemoveId();
                _players.RemoveAt(indexOfPlayer);
                Console.WriteLine("Игрок удален");
            }
            else
            {
                Console.WriteLine("Игрока по этому ID не существует");
            }
        }

        public void AddPlayer()
        {
            Console.WriteLine("Введите ник нового игрока");
            string nickname = Console.ReadLine();
            Player player = new Player(nickname);

            _players.Add(player);
            player.ShowInfo();
        }

        public void BanPlayer()
        {
            Console.WriteLine("Введите ID игрока, которого вы хотите забанить");
            int indexOfPlayer = FindPlayerByID();

            if (indexOfPlayer >= 0)
            {
                if (_players[indexOfPlayer].IsBanned)
                {
                    Console.WriteLine("Игрок уже забанен");
                }
                else
                {
                    _players[indexOfPlayer].Ban();
                    Console.WriteLine($"Игрок забанен");
                }   
            }
            else
            {
                Console.WriteLine("Игрока по этому ID не существует");
            }
        }

        public void UnbanPlayer()
        {
            Console.WriteLine("Введите ID игрока, которого вы хотите разбанить");
            int indexOfPlayer = FindPlayerByID();

            if (indexOfPlayer >= 0)
            {
                if (_players[indexOfPlayer].IsBanned == false)
                {
                    Console.WriteLine("Игрок не забанен");
                }
                else
                {
                    _players[indexOfPlayer].Unban();
                    Console.WriteLine($"Игрок разбанен");
                }
            }
            else
            {
                Console.WriteLine("Игрока по этому ID не существует");
            }
        }

        public void ShowInfo()
        {
            for (int i = 0; i < _players.Count; i++)
            {
                _players[i].ShowInfo();
            }
        }

        private int FindPlayerByID()
        {
            string stringId = Console.ReadLine();
            int indexOfPlayer = -1;
            int id = ConverToInt(stringId);

            for (int i = 0; i < _players.Count; i++)
            {
                if (_players[i].Id == id)
                {
                    indexOfPlayer = i;
                    break;
                }
            }

            return indexOfPlayer;
        }

        private int ConverToInt(string text)
        {
            int number = -1;

            if (int.TryParse(text, out number))
            {
                Console.WriteLine("Загрузка....");
            }
            else
            {
                Console.WriteLine("Вы ввели не число");
            }

            return number;
        }
    }

    class Player
    {
        private static List<int> _usenIds = new List<int>();
        private Random _random = new Random();
        private string _nickName;
        private int _level;
        public bool IsBanned { get; private set; }
        public int Id { get; private set; }

        public Player(string nickName)
        {
            Id = GiveId();
            _nickName = nickName;
            _level = 1;
            IsBanned = false;
        }
        public void RemoveId()
        {
            _usenIds.Remove(Id);
        }

        private int GiveId()
        {
            int id = _random.Next(0, 9999);
            bool isContains = true;

            while (isContains)
            {
                if (_usenIds.IndexOf(id) == -1)
                {
                    _usenIds.Add(id);
                    isContains = false;
                }
                else
                {
                    id = _random.Next(0, 9999);
                }
            }

            return id;
        }

        public void Ban()
        {
            IsBanned = true;
        }

        public void Unban()
        {
            IsBanned = false;
        }

        public void ShowInfo()
        {
            if (IsBanned)
            {
                Console.WriteLine($"Игрок {Id} забанен. Просмотр информации недоступен");
            }
            else
            {
                Console.WriteLine($"Игрок {Id} под ником { _nickName} имеет уровень {_level}");
            }
        }
    }
}
